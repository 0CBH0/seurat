% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generics.R, R/dimensional_reduction.R
\name{RunCCA}
\alias{RunCCA}
\alias{RunCCA.default}
\alias{RunCCA.Seurat}
\title{Perform Canonical Correlation Analysis}
\usage{
RunCCA(object1, object2, num.cc, ...)

\method{RunCCA}{default}(object1, object2, standardize = TRUE,
  num.cc = 20, verbose = FALSE, use.cpp = TRUE)

\method{RunCCA}{Seurat}(object1, object2, assay1 = NULL, assay2 = NULL,
  num.cc = 20, features = NULL, renormalize = FALSE,
  rescale = FALSE, compute.gene.loadings = TRUE, add.cell.id1 = NULL,
  add.cell.id2 = NULL, verbose = TRUE, use.cpp = TRUE, ...)
}
\arguments{
\item{object1}{First Seurat object}

\item{object2}{Second Seurat object.}

\item{num.cc}{Number of canonical vectors to calculate}

\item{...}{Extra parameters (passed onto MergeSeurat in case with two objects
passed, passed onto ScaleData in case with single object and rescale.groups
set to TRUE)}

\item{standardize}{Standardize matrices - scales columns to have unit variance
and mean 0}

\item{assay1}{Assay to pull from in the first object}

\item{features}{Set of genes to use in CCA. Default is the union of both
the variable features sets present in both objects.}

\item{rescale}{Rescale the datasets prior to CCA. If FALSE, uses existing data in the scale data slots.}

\item{compute.gene.loadings}{Also compute the gene loadings. NOTE - this will
scale every gene in the dataset which may impose a high memory cost.}

\item{assay1}{Assay to pull from in the second object}

\item{renormlize}{Renormalize raw data after merging the objects. If FALSE,
merge the data matrices also.}
}
\value{
Returns a combined Seurat object with the CCA results stored.
}
\description{
Runs a canonical correlation analysis using a diagonal implementation of CCA.
For details about stored CCA calculation parameters, see
\code{PrintCCAParams}.
}
\section{Methods (by class)}{
\itemize{
\item \code{default}: Run diagonal CCA on matrices

\item \code{Seurat}: Run CCA on a Seurat object
}}

\examples{
pbmc_small
# As CCA requires two datasets, we will split our test object into two just for this example
pbmc1 <- SubsetData(pbmc_small,cells = pbmc_small@cell.names[1:40])
pbmc2 <- SubsetData(pbmc_small,cells = pbmc_small@cell.names[41:80])
pbmc1@meta.data$group <- "group1"
pbmc2@meta.data$group <- "group2"
pbmc_cca <- RunCCA(pbmc1,pbmc2)
# Print results
PrintDim(pbmc_cca,reduction.type = 'cca')

}
\seealso{
\code{MergeSeurat}
}
