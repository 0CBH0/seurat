% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cluster_determination.R,
%   R/cluster_determination_generics.R
\name{FindClusters.Seurat}
\alias{FindClusters.Seurat}
\alias{FindClusters}
\title{Cluster Determination}
\usage{
\method{FindClusters}{Seurat}(object, graph.name = NULL, modularity.fxn = 1,
  resolution = 0.8, algorithm = 1, n.start = 100, n.iter = 10,
  random.seed = 0, temp.file.location = NULL, edge.file.name = NULL,
  verbose = TRUE, workflow.name = NULL)

FindClusters(object, modularity.fxn, resolution, algorithm, n.start, n.iter,
  random.seed, temp.file.location, edge.file.name, verbose, ...)
}
\arguments{
\item{object}{Seurat object}

\item{graph.name}{Name of graph to use for the clustering algorithm}

\item{modularity.fxn}{Modularity function (1 = standard; 2 = alternative).}

\item{resolution}{Value of the resolution parameter, use a value above
(below) 1.0 if you want to obtain a larger (smaller) number of communities.}

\item{algorithm}{Algorithm for modularity optimization (1 = original Louvain
algorithm; 2 = Louvain algorithm with multilevel refinement; 3 = SLM
algorithm).}

\item{n.start}{Number of random starts.}

\item{n.iter}{Maximal number of iterations per random start.}

\item{random.seed}{Seed of the random number generator.}

\item{temp.file.location}{Directory where intermediate files will be written.
Specify the ABSOLUTE path.}

\item{edge.file.name}{Edge file to use as input for modularity optimizer jar.}

\item{verbose}{Print output}

\item{workflow.name}{Name of workflow}
}
\value{
Returns a Seurat object and optionally the SNN matrix,
        object idents have been updated with new cluster info
}
\description{
Identify clusters of cells by a shared nearest neighbor (SNN) modularity
optimization based clustering algorithm. First calculate k-nearest neighbors
and construct the SNN graph. Then optimize the modularity function to
determine clusters. For a full description of the algorithms, see Waltman and
van Eck (2013) \emph{The European Physical Journal B}. Thanks to Nigel
Delaney (evolvedmicrobe@github) for the rewrite of the Java modularity
optimizer code in Rcpp!
}
\section{Methods (by class)}{
\itemize{
\item \code{Seurat}: FindClusters on a Seurat object
}}

