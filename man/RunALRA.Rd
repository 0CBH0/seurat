% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generics.R, R/preprocessing.R
\name{RunALRA}
\alias{RunALRA}
\alias{RunALRA.Seurat}
\title{Run Adaptively-thresholded Low Rank Approximation (ALRA)}
\usage{
RunALRA(object, k, q, ...)

\method{RunALRA}{Seurat}(object, k = NULL, q = 10, assay = NULL,
  slot = "data", setDefaultAssay = TRUE, genes.use = NULL, K = 100,
  p.val.th = 1e-10, noise.start = 80, q.k = 2, k.only = FALSE)
}
\arguments{
\item{object}{a Seurat object}

\item{k}{The rank of the rank-k approximation. Set to 0 for automated choice of k.}

\item{q}{The number of additional power iterations in randomized SVD when
computing rank k approximation. By default, q=10.}

\item{slot}{slot to use}

\item{setDefaultAssay}{If TRUE, will set imputed results as default Assay}

\item{genes.use}{genes to impute}

\item{K}{Number of singular values to compute when choosing k. Must be less
than the smallest dimension of the matrix.}

\item{p.val.th}{The threshold for ''significance'' when choosing k}

\item{noise.start}{Index for which all smaller singular values are considered noise}

\item{q.k}{Number of additional power iterations when choosing k}

\item{k.only}{If TRUE, only computes optimal k WITHOUT performing ALRA}

\item{assay:}{Assay to use}
}
\description{
Runs ALRA, a method for imputation of dropped out values in scRNA-seq data.
Computes the k-rank approximation to A_norm and adjusts it according to the
error distribution learned from the negative values. Described in 
Linderman, G. C., Zhao, J., Kluger, Y. (2018). "Zero-preserving imputation
of scRNA-seq data using low rank approximation." (bioRxiv:138677)
}
\section{Methods (by class)}{
\itemize{
\item \code{Seurat}: Run ALRA
}}

\examples{
pbmc_small
# Example 1: Simple usage, with automatic choice of k. 
pbmc_small_alra <- RunALRA(pbmc_small)
\dontrun{
# Example 2: Visualize choice of k, then run ALRA
# First, choose K
pbmc_small_alra <- RunALRA(pbmc_small, k.only=TRUE)
# Plot the spectrum, spacings, and p-values which are used to choose k
ggouts <- ALRAChooseKPlot(pbmc_small_alra)
do.call(gridExtra::grid.arrange, c(ggouts, nrow=1))
# Run ALRA with the chosen k
pbmc_small_alra <- RunALRA(pbmc_small_alra)
}
}
