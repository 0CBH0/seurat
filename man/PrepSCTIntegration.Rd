% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/integration.R
\name{PrepSCTIntegration}
\alias{PrepSCTIntegration}
\title{Prepare an object list normalized with sctransform for integration.}
\usage{
PrepSCTIntegration(
  object.list,
  assay = NULL,
  anchor.features = 2000,
  sct.clip.range = NULL,
  verbose = TRUE
)
}
\arguments{
\item{object.list}{A list of objects to prep for integration}

\item{assay}{Name or vector of assay names (one for each object) that correspond
to the assay that SCTransform has been run on. If NULL, the current default
assay for each object is used.}

\item{anchor.features}{Can be either:
\itemize{
  \item{A numeric value. This will call \code{\link{SelectIntegrationFeatures}}
  to select the provided number of features to be used in anchor finding}
  \item{A vector of features to be used as input to the anchor finding
  process}
}}

\item{sct.clip.range}{Numeric of length two specifying the min and max values
the Pearson residual will be clipped to}

\item{verbose}{Display output/messages}
}
\value{
A list of Seurat objects with the appropriate \code{scale.data} slots
containing only the required \code{anchor.features}.
}
\description{
This function takes in a list of objects that have been normalized with the 
\code{\link{SCTransform}} method and performs the following steps:
\itemize{
  \item{If anchor.features is a numeric value, calls \code{\link{SelectIntegrationFeatures}} 
  to determine the features to use in the downstream integration procedure.}
  \item{Ensures that the sctransform residuals for the features specified 
  to anchor.features are present in each object in the list. This is 
  necessary because the default behavior of \code{\link{SCTransform}} is to 
  only store the residuals for the features determined to be variable. 
  Residuals are recomputed for missing features using the stored model 
  parameters via the \code{\link{GetResidual}} function.}
  \item{Subsets the scale.data slot to only contain the residuals for
  anchor.features for efficiency in downstream processing. }
}
}
