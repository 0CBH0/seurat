% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generics.R, R/dimensional_reduction.R
\name{RunMultiCCA}
\alias{RunMultiCCA}
\alias{RunMultiCCA.default}
\alias{RunMultiCCA.Seurat}
\title{Perform Canonical Correlation Analysis with more than two groups}
\usage{
RunMultiCCA(object.list, features.use, add.cell.ids, niter, num.ccs,
  standardize, verbose)

\method{RunMultiCCA}{default}(object.list, niter = 25, num.ccs = 1,
  standardize = TRUE, verbose = TRUE)

\method{RunMultiCCA}{Seurat}(object.list, assay.use = NULL,
  features.use = NULL, add.cell.ids = NULL, niter = 25,
  num.ccs = 1, standardize = TRUE, renormalize = TRUE,
  compute.gene.loadings = TRUE, verbose = TRUE)
}
\arguments{
\item{object.list}{List of Seurat objects}

\item{features.use}{Set of genes to use in CCA. Default is the union of both
the variable features sets present in both objects.}

\item{niter}{Number of iterations to perform. Set by default to 25.}

\item{num.ccs}{Number of canonical vectors to calculate}

\item{standardize}{standardize scale.data matrices to be centered (mean zero)
and scaled to have a standard deviation of 1.}

\item{assay.use}{Assay to use}

\item{compute.gene.loadings}{Also compute the gene loadings. NOTE - this will
scale every gene in the dataset which may impose a high memory cost.}

\item{renormlize}{Renormalize raw data after merging the objects. If FALSE,
merge the data matrices also.}
}
\value{
Returns a combined Seurat object with the CCA stored as a DimReduc
}
\description{
Runs a canonical correlation analysis
}
\section{Methods (by class)}{
\itemize{
\item \code{default}: Run mCCA on a list of matrices

\item \code{Seurat}: Run mCCA on a Seurat object
}}

\examples{
\dontrun{
pbmc_small
# As multi-set CCA requires more than two datasets, we will split our test object into
# three just for this example
pbmc1 <- SubsetData(pbmc_small,cells.use = pbmc_small@cell.names[1:30])
pbmc2 <- SubsetData(pbmc_small,cells.use = pbmc_small@cell.names[31:60])
pbmc3 <- SubsetData(pbmc_small,cells.use = pbmc_small@cell.names[61:80])
pbmc1@meta.data$group <- "group1"
pbmc2@meta.data$group <- "group2"
pbmc3@meta.data$group <- "group3"
pbmc.list <- list(pbmc1, pbmc2, pbmc3)
pbmc_cca <- RunMultiCCA(object.list = pbmc.list, genes.use = pbmc_small@var.genes, num.ccs = 3)
# Print results
PrintDim(pbmc_cca,reduction.type = 'cca')
}

}
