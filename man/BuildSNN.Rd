% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generics.R, R/clustering.R
\name{BuildSNN}
\alias{BuildSNN}
\alias{BuildSNN.default}
\alias{BuildSNN.Assay}
\alias{BuildSNN.Seurat}
\title{SNN Graph Construction}
\usage{
BuildSNN(object, k.param, prune.SNN, nn.eps, verbose, force.recalc, ...)

\method{BuildSNN}{default}(object, distance.matrix = FALSE,
  k.param = 10, prune.SNN = 1/15, nn.eps = 0, verbose = TRUE,
  force.recalc = FALSE)

\method{BuildSNN}{Assay}(object, features = NULL, k.param = 10,
  prune.SNN = 1/15, nn.eps = 0, verbose = TRUE,
  force.recalc = FALSE)

\method{BuildSNN}{Seurat}(object, assay = NULL, features = NULL,
  reduction = "pca", dims = 1:10, k.param = 30, prune.SNN = 1/15,
  nn.eps = 0, verbose = TRUE, force.recalc = FALSE,
  do.plot = FALSE, graph.name = NULL, workflow.name = NULL)
}
\arguments{
\item{object}{Seurat object}

\item{k.param}{Defines k for the k-nearest neighbor algorithm}

\item{prune.SNN}{Sets the cutoff for acceptable Jaccard index when
computing the neighborhood overlap for the SNN construction. Any edges with
values less than or equal to this will be set to 0 and removed from the SNN
graph. Essentially sets the strigency of pruning (0 --- no pruning, 1 ---
prune everything).}

\item{nn.eps}{Error bound when performing nearest neighbor seach using RANN;
default of 0.0 implies exact nearest neighbor search}

\item{verbose}{Whether or not to print output to the console}

\item{force.recalc}{Force recalculation of SNN.}

\item{distance.matrix}{Boolean value of whether the provided matrix is a
distance matrix}

\item{features}{A vector of feature names to use in construction of SNN
graph if building directly based on data rather than a dimensionally reduced
representation (i.e. PCs).}

\item{assay}{Assay to use in construction of SNN}

\item{reduction}{Name of dimensional reduction technique to use in
construction of SNN graph. (e.g. "pca", "ica")}

\item{dims}{A vector of the dimensions to use in construction of the SNN
graph (e.g. To use the first 10 PCs, pass 1:10)}

\item{do.plot}{Plot SNN graph on tSNE coordinates}

\item{graph.name}{Optional naming parameter for stored SNN graph. Default is
assay.name_snn.}

\item{workflow.name}{Name of workflow}

\item{features}{Features to use as input for building the SNN}

\item{reduction}{Reduction to use as input for building the SNN}

\item{dims}{Dimensions of reduction to use as input}
}
\value{
Returns the object with object@snn filled
}
\description{
Constructs a Shared Nearest Neighbor (SNN) Graph for a given dataset. We
first determine the k-nearest neighbors of each cell. We use this knn graph
to construct the SNN graph by calculating the neighborhood overlap
(Jaccard index) between every cell and its k.param nearest neighbors.
}
\section{Methods (by class)}{
\itemize{
\item \code{default}: Build an SNN on a given matrix

\item \code{Assay}: Build an SNN on an Assay object

\item \code{Seurat}: Build an SNN on a Seurat object
}}

\examples{
pbmc_small
# Compute an SNN on the gene expression level
pbmc_small <- BuildSNN(pbmc_small, features = VariableFeatures(object = pbmc_small))

# More commonly, we build the SNN on a dimensionally reduced form of the data
# such as the first 10 principle components.

pbmc_small <- BuildSNN(pbmc_small, reduction = "pca", dims = 1:10)

}
